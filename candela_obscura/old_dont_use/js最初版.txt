const cmdSeal = seal.ext.newCmdItemInfo();
cmdSeal.name = 'iw';
cmdSeal.help = '.iw <x> // 掷x个六面骰并报告最高的成功等级';

cmdSeal.solve = (ctx, msg, cmdArgs) => {
    let ret = seal.ext.newCmdExecuteResult(true), text = '', roller = seal.format(ctx,"{$t玩家_RAW}"), res;
    if (cmdArgs.getArgN(1) == 'help' || cmdArgs.getArgN(1) == '') {
        ret.showHelp = true;
        return ret;
    }
    let vsDice = parseInt(cmdArgs.getArgN(1));
    if (vsDice == 0) {
        text = '错误：无法掷0个骰子。';
        seal.replyToSender(ctx, msg, text);
        return ret;
    } else if (vsDice > 10) {
        text = '错误：掷骰次数过多。';
        seal.replyToSender(ctx, msg, text);
        return ret;
    }
    let results = [];
    for (let i = 0; i < vsDice; i++) {
        res = Math.floor(Math.random() * 6) + 1;
        results.push(res);
    }
    let highestSuccess = determineHighestSuccess(results);
    text = roller + '掷了' + vsDice + '个骰子：[' + results.join('、') + ']，最高成功等级为：' + highestSuccess;
    seal.replyToSender(ctx, msg, text);
    return ret;
};

function determineHighestSuccess(results) {
    let sixCount = results.filter(res => res === 6).length;
    if (sixCount > 1) {
        return '完美成功';
    } else if (sixCount === 1) {
        return '成功';
    } else {
        let maxResult = Math.max(...results);
        if (maxResult >= 4 && maxResult <= 5) {
            return '混合成功';
        } else if (maxResult <= 3) {
            return '失败';
        }
    }
}

ext.cmdMap['iw'] = cmdSeal;